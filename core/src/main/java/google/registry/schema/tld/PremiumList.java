// Copyright 2019 The Nomulus Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package google.registry.schema.tld;

import static com.google.common.base.Preconditions.checkState;

import java.math.BigDecimal;
import java.time.ZonedDateTime;
import java.util.Map;
import javax.persistence.CollectionTable;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.MapKeyColumn;
import javax.persistence.Table;
import org.joda.money.CurrencyUnit;

/**
 * A list of premium prices for domain names.
 *
 * <p>Note that the primary key of this entity is {@link #revisionId}, which is auto-generated by
 * the database. So, if a retry of insertion happens after the previous attempt unexpectedly
 * succeeds, we will end up with having two exact same premium lists that differ only by revisionId.
 * This is fine though, because we only use the list with the highest revisionId.
 */
@Entity
@Table(name = "PremiumList")
public class PremiumList {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "revision_id")
  private Long revisionId;

  @Column(name = "creation_timestamp", nullable = false)
  private ZonedDateTime creationTimestamp;

  @Column(name = "currency", nullable = false)
  private CurrencyUnit currency;

  @ElementCollection
  @CollectionTable(
      name = "PremiumEntry",
      joinColumns = @JoinColumn(name = "revision_id", referencedColumnName = "revision_id"))
  @MapKeyColumn(name = "domain_label")
  @Column(name = "price", nullable = false)
  private Map<String, BigDecimal> labelsToPrices;

  private PremiumList(
      ZonedDateTime creationTimestamp,
      CurrencyUnit currency,
      Map<String, BigDecimal> labelsToPrices) {
    this.creationTimestamp = creationTimestamp;
    this.currency = currency;
    this.labelsToPrices = labelsToPrices;
  }

  // Hibernate requires this default constructor.
  private PremiumList() {}

  // TODO(mcilwain): Change creationTimestamp to Joda DateTime.
  /** Constructs a {@link PremiumList} object. */
  public static PremiumList create(
      ZonedDateTime creationTimestamp,
      CurrencyUnit currency,
      Map<String, BigDecimal> labelsToPrices) {
    return new PremiumList(creationTimestamp, currency, labelsToPrices);
  }

  /** Returns the ID of this revision, or throws if null. */
  public Long getRevisionId() {
    checkState(
        revisionId != null, "revisionId is null because it is not persisted in the database");
    return revisionId;
  }

  /** Returns the creation time of this revision of the premium list. */
  public ZonedDateTime getCreationTimestamp() {
    return creationTimestamp;
  }

  /** Returns a {@link Map} of domain labels to prices. */
  public Map<String, BigDecimal> getLabelsToPrices() {
    return labelsToPrices;
  }
}
