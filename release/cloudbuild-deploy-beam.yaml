# To run the build locally, install cloud-build-local first.
# Then run:
# cloud-build-local --config=cloudbuild-tag.yaml --dryrun=false --substitutions TAG_NAME=[TAG] .
# This will add a "live" tag to the proxy image in gcr.io/[PROJECT_ID]/proxy:[TAG].
# The PROJECT_ID is the current project name that gcloud uses.
#
# To manually trigger a build on GCB, run:
# gcloud builds submit --config cloudbuild-tag.yaml --substitutions TAG_NAME=[TAG] .
#
# To trigger a build automatically, follow the instructions below and add a trigger:
# https://cloud.google.com/cloud-build/docs/running-builds/automate-builds
steps:
# Pull the latest nomulus.jar to local
- name: 'gcr.io/${PROJECT_ID}/builder:latest'
  args:
    - gsutil
    - cp
    - gs://${PROJECT_ID}-deploy/${TAG_NAME}/nomulus.jar
    - .
# Pull the credential for nomulus tool
- name: 'gcr.io/${PROJECT_ID}/builder:latest'
  args:
    - gsutil
    - cp
    - gs://${PROJECT_ID}-deploy/nomulus-credential/${_CREDENTIAL}
    - .
# Decrypt the credential
- name: 'gcr.io/cloud-builders/gcloud'
  args:
    - kms
    - decrypt
    - --ciphertext-file=${_CREDENTIAL}
    - --plaintext-file=nomulus-credential.json
    - --location=global
    - --keyring=${_KEYRING}
    - --key=${_KEY}
# Deploy spec11 and invoicing pipeline to GCS
- name: 'gcr.io/${PROJECT_ID}/builder:latest'
  entrypoint: /bin/bash
  args:
    - -c
    - |
      java -jar nomulus.jar -e ${_ENV} --credential nomulus-credential.json \
      deploy_spec11_pipeline
      java -jar nomulus.jar -e ${_ENV} --credential nomulus-credential.json \
      deploy_invoicing_pipeline
timeout: 3600s
options:
  machineType: 'N1_HIGHCPU_8'
